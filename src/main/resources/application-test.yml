
jwt:
  secret: secretKeysecretKeysecretKeysecretKeysecretKeysecretKeysecretKeysecretKeysecretKeysecretKey
  access-token-expire-time: 600000
  refresh-token-expire-time: 1800000

nanoId:
  alphabet: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
  length: 10


spring:
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:testdb
    username: sa
    password:
  h2:
    console:
      enabled: true
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    database: h2
    hibernate:
      ddl-auto: update
    open-in-view: false
  security:
    pbkdf2:
      hashwidth: 16
      iterations: 1024
      algorithm: PBKDF2WithHmacSHA512
    salt:
      algorithm: SHA1PRNG

#    oauth2:
#      client:
#        registration:
#          kakao:
#            client-id: ${spring.security.oauth2.client.registration.kakao.client-id}
#            #            client-secret: ${spring.security.oauth2.client.registration.kakao.client-secret}
#            scope:
#              - profile_nickname
#              - profile_image
#              - account_email
#              - age_range
#            client-name: Kakao
#            authorization-grant-type: ${spring.security.oauth2.client.registration.kakao.authorization-grant-type}
#            client-authentication-method: client_secret_post
#            redirect-uri: ${spring.security.oauth2.client.registration.kakao.redirect-uri}
#
#          google:
#            client-id: ${spring.security.oauth2.client.registration.google.client-id}
#            client-secret: ${spring.security.oauth2.client.registration.google.client-secret}
#            scope:
#              - email
#              - profile
#            redirect-uri: ${spring.security.oauth2.client.registration.google.redirect-uri}
#
#          naver:
#            client-id: ${spring.security.oauth2.client.registration.naver.client-id}
#            client-secret: ${spring.security.oauth2.client.registration.naver.client-secret}
#            scope:
#              - name
#              - email
#              - profile_image
#              - birthyear
#            client-name: Naver
#            authorization-grant-type: authorization_code
#            redirect-uri: ${spring.security.oauth2.client.registration.naver.redirect-uri}
#
#        provider:
#          kakao:
#            authorization-uri: ${spring.security.oauth2.client.provider.kakao.authorization-uri}
#            token-uri: ${spring.security.oauth2.client.provider.kakao.token-uri}
#            user-info-uri: ${spring.security.oauth2.client.provider.kakao.user-info-uri}
#            user-name-attribute: ${spring.security.oauth2.client.provider.kakao.user-name-attribute}
#
#          naver:
#            authorization-uri: ${spring.security.oauth2.client.provider.naver.authorization-uri}
#            token-uri: ${spring.security.oauth2.client.provider.naver.token-uri}
#            user-info-uri: ${spring.security.oauth2.client.provider.naver.user-info-uri}
#            user-name-attribute: ${spring.security.oauth2.client.provider.naver.user-name-attribute}
#
#  data:
#    redis:
#      host: ${spring.data.redis.host}
#      port: ${spring.data.redis.port}

